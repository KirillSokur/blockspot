version: '3.6'

services:
  postgres:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
  graphql-engine:
    image: hasura/graphql-engine:v1.0.0-alpha28
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:@postgres:5432/postgres
      HASURA_GRAPHQL_ACCESS_KEY: dev
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HS256","key":"hA-LhR.pPv9eR/2V4t~B?7reN@]Y>d+g"}'
    command:
      - graphql-engine
      - serve
      - --enable-console
  cypress:
    build:
      context: ../
      dockerfile: docker/Dockerfile-cypress
    depends_on:
      - blockspot
    environment:
      CYPRESS_RECORD_KEY: ${CYPRESS_RECORD_KEY}
  blockspot:
    build:
      context: ../
      dockerfile: docker/Dockerfile.prod
    ports:
      - '3000:3000'
    depends_on:
      - 'postgres'
      - 'graphql-engine'
    environment:
      # Do not download the cypress binary
      CYPRESS_INSTALL_BINARY: 0
      APP_URL: http://localhost:3000
      HASURA_GRAPHQL_ACCESS_KEY: dev
      HASURA_URL: http://graphql-engine:8080
      JWT_SECRET: hA-LhR.pPv9eR/2V4t~B?7reN@]Y>d+g
      PG_CONNECTION_STRING: postgres://postgres:@postgres:5432/postgres
      PGSSLMODE: require
      IS_CI: "true"
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      GOOGLE_MAPS_API_KEY: ${GOOGLE_MAPS_API_KEY}
      GOOGLE_RECAPTCHA_CLIENT_KEY: ${GOOGLE_RECAPTCHA_CLIENT_KEY}
      GOOGLE_RECAPTCHA_SERVER_KEY: ${GOOGLE_RECAPTCHA_SERVER_KEY}
      MAPBOX_TOKEN: ${MAPBOX_TOKEN}